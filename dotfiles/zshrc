#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
autoload -Uz promptinit
promptinit
prompt owen

export CLICOLOR=1
export LSCOLORS=gxfxcxdxbxegedabagacad

# for tab completion colors in zsh
export LS_COLORS='di=36;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:'
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==02=01}:${(s.:.)LS_COLORS}")'

# Use ctags as backend for GNU Global
export GTAGSLABEL=ctags

alias zreload="exec zsh"

# can also try deleting node_modules
alias jsclean="npm cache clean && rm -r ~/repos/airbnb/tmp/cache && sudo service unicorn restart && rm -r /tmp/phoenix-cache && sudo service phoenix restart"

alias gbclean="git branch --merged | grep -v master | xargs git branch -d"
alias gradlew="~/repos/treehouse/gradlew"
alias rolod="cd ~/repos/treehouse/projects/rolodex"
alias rolo="ssh i-00b3619fb7febbf3d.inst.aws.airbnb.com"
alias rolo-test="ssh i-01ce2644e2eb1e674.inst.aws.airbnb.com"
alias sup="git fetch && git rebase origin/master && vagrant ssh -c \"'cd ~/airbnb && /usr/local/bin/owen-post-merge && sudo service unicorn restart && sudo service nginx restart'\""
alias bounce="airlab ssh 'sudo service monorail restart && sudo service nginx restart'"
alias monobounce="airlab ssh 'sudo sv restart /etc/service/monorail*'"
alias newbundle="airlab ssh 'sudo service monorail-hypernova restart && sudo service monorail-webpack restart'"
alias hypernova="airlab ssh 'sudo service monorail-hypernova restart'"
alias freb="git fetch && git rebase origin/master"
alias frebb="git fetch && git rebase origin/master && monupdate"
alias monupdate="vagrant ssh -c \"'cd ~/airbnb && bundle install && npm install && sudo service monorail restart && sudo service nginx restart && sudo service monorail-hypernova restart && sudo service monorail-webpack restart'\""
alias faster="vagrant ssh -c \"'sudo sv down bouncer-worker-0 bouncer autopricing; sudo service pricing stop; sudo service pinnacle stop; sudo service discover stop; sudo service search stop'\""
alias slower="vagrant ssh -c \"'sudo sv down bouncer-worker-0 bouncer autopricing; sudo service pricing start; sudo service pinnacle start; sudo service discover start; sudo service search start'\""
alias a="airlab"
alias less="less -R"
alias rekey='goldkey'
alias prune='git remote prune origin'
alias prune-merged="git branch --merged master | grep -v -E '^(\\* |  master$)' | xargs -n 1 git branch -d"
alias undo='git reset --soft HEAD~ && git reset HEAD'
alias lerf="vagrant ssh -c \"'cd ~/repos/data/airflow/metrics_repo/deploy && ./dev_load_redis'\""
alias bluetooth="sudo kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport && sudo kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport"
alias gat="ctags -R --languages=-javascript --exclude=.git --exclude=node_modules --exclude=*.txt"
alias egat="ctags -e -R --languages=ruby --exclude=.git --exclude=node_modules --exclude=log ."
alias ggat="rm /tmp/gtags_source_files && ag -l -g \"\" --ruby > /tmp/gtags_source_files && gtags -v -f /tmp/gtags_source_files"
# alias tmuxa="tmux attach -d"
alias rc1="ssh owen_lin@rc1.musta.ch"
alias hive="ssh owen_lin@gw1.silver.musta.ch"
alias hive3="ssh owen_lin@gw3.silver.musta.ch"
alias gold="ssh owen_lin@gw1.gold.musta.ch"
alias spark="ssh owen_lin@gw2.spark.musta.ch"
alias tmuxd="/bin/sh /Users/owen_lin/personal/tmux/default.sh"
alias tmuxv="/bin/sh /Users/owen_lin/personal/tmux/vagrant.sh"
alias rosi="pushd ~/repos/treehouse && ./gradlew :projects:rolodex:clean && ./gradlew :projects:rolodex:shadowjar && pushd projects/rolodex && ./sideload.sh rolodex-test.aws.airbnb.com || popd || popd"
alias rolo-build="gradlew :projects:rolodex:rolodex-service:shadowjar"
alias spark-build="pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:export-contacts-job:clean && ./gradlew :projects:rolodex-data-pipeline:export-contacts-job:shadowjar && pushd projects/rolodex-data-pipeline/export-contacts-job && ./scripts/sideload.sh gw2.spark.musta.ch || popd || popd"
alias omnes-build="pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:clean && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:shadowjar && pushd projects/rolodex-data-pipeline/omnes-offset-job && ./scripts/sideload.sh gw2.spark.musta.ch || popd || popd"
alias omnes-b="pushd ~/repos/treehouse && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:clean && ./gradlew :projects:rolodex-data-pipeline:omnes-offset-job:shadowjar || popd"

export JAVA7_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home
export JAVA8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home
export JAVA_HOME=$JAVA8_HOME

export PATH=~/bin:$JAVA_HOME/bin:/usr/local/share/python:$PATH

# afdev
export DATA_DIR="/Users/owen_lin/airlab/repos/data"
export AFDEV_HOST="i-d6159ec0.inst.aws.airbnb.com"
export AFDEV_PORT=59152

# ptunnel (hive postgres atlas)
function ptunnel {
  ssh -t owen_lin@gw${1}.silver.musta.ch -L 5432:vpc-atlas-master.cqmqbyzxdwlk.us-east-1.rds.amazonaws.com:5432
}

# npm run jest in airlab
function npmt {
  airlab ssh "cd ~/repos/airbnb && npm run cover-quick -- ${1}"
}

# npm run jest in airlab and open coverage file
function npmto {
  airlab ssh "cd ~/repos/airbnb && npm run cover-quick -- ${1}" && open coverage/index.html
}

# Push a gem to the remote gemserver
function push-gem {
  username=`whoami`
  # resolve the DNS entry only once,
  # otherwise the commands might go to different hosts
  h=$(dig +short geminabox-internal.aws.airbnb.com|head -n1|sed s'/\.$//')
  scp $1 ${username}@${h}:~ && \
    ssh ${username}@${h} "add_gem.rb $1"
}

# Load an ERF config in dev. This doesn't work yet. Maybe do using tmux commands
function load-erf {
  vagrant ssh -c \"'cd /home/vagrant/repos/data/airflow/metrics_repo/deploy && bundle install && bundle exec ./dev_load_sitar.rb {$1}'\"
}

[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM

# This is also duplicated in .zshenv to get spacemacs to work with scss-lint
eval "$(rbenv init -)" # This loads rbenv

export EDITOR=vim
export VISUAL=vim

###-begin-npm-completion-###
#
# npm command completion script
#
# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
#
if type complete &>/dev/null; then
  _npm_completion () {
    local words cword
    if type _get_comp_words_by_ref &>/dev/null; then
      _get_comp_words_by_ref -n = -n @ -w words -i cword
    else
      cword="$COMP_CWORD"
      words=("${COMP_WORDS[@]}")
    fi

    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$cword" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           npm completion -- "${words[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _npm_completion npm
elif type compdef &>/dev/null; then
  _npm_completion() {
    local si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 npm completion -- "${words[@]}" \
                 2>/dev/null)
    IFS=$si
  }
  compdef _npm_completion npm
elif type compctl &>/dev/null; then
  _npm_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       npm completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _npm_completion npm
fi
###-end-npm-completion-###

# Make fzf index faster
# export FZF_DEFAULT_COMMAND='(git ls-tree -r --name-only HEAD || find . -path "*/\.*" -prune -o -type f -print -o -type l -print | sed s/^..//) 2> /dev/null'
export FZF_DEFAULT_COMMAND='ag -l -g ""'
export FZF_CTRL_T_COMMAND='ag -l -g ""'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Node 6
export PATH="/usr/local/opt/node@6/bin:$PATH"

# AIRLAB-DO-NOT-MODIFY section:ShellWrapper {{{
# Airlab will only make edits inside these delimiters.

# Source Airlab's shell integration, if it exists.
if [ -e ~/.airlab/shellhelper.sh ]; then
  source ~/.airlab/shellhelper.sh
fi
# AIRLAB-DO-NOT-MODIFY section:ShellWrapper }}}
